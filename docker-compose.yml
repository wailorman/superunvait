version: '2'
services:
  api:
    build: .
    image: "wailorman/ibb-api"
    restart: on-failure
    container_name: ibb-api
    command: npm run start
    links:
      - "mysql:mysql"
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: "production"
      DB_CONNECTION_STRING: mysql://root@mysql/ibb
      OK_CREDENTIALS:

  scrapper:
    build: .
    image: "wailorman/ibb-api"
    restart: on-failure
    container_name: ibb-scrapper
    command: npm run scrapper
    links:
      - "mysql:mysql"
    environment:
      NODE_ENV: "production"
      DB_CONNECTION_STRING: mysql://root@mysql/ibb
      OK_CREDENTIALS:
      PARALLEL_HTTP_REQUESTS: 1
      FETCH_UNFILLED_INTERVAL: 0
      FETCH_CANDIDATES_INTERVAL: 0

  mem-observer:
    build: .
    image: "wailorman/ibb-api"
    restart: on-failure
    container_name: ibb-mem-observer
    command: npm run mem-observer
    links:
      - "mysql:mysql"
    environment:
      NODE_ENV: "production"
      DB_CONNECTION_STRING: mysql://root@mysql/ibb
      OK_CREDENTIALS:
      PARALLEL_HTTP_REQUESTS: 1
      FETCH_MEMBERS_INTERVAL: 0




  mysql:
    container_name: ibb-mysql
    image: "mysql:5.7"
    volumes:
      - ./bin/mysql-config/my.dev.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ~/db/data:/var/lib/mysql
    restart: on-failure
    ports:
      - "3306:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: ibb
